Team ID: PNT2022TMID11484 

IBM IOT PROGRAM 

 

import time 

import sys 

import ibmiotf.application 

import ibmiotf.device 

import random 

 

#Provide your IBM Watson Device Credentials 

organization = "i3lxgz" 

deviceType = "ESP32" 

deviceId = "06020" 

authMethod = "token" 

authToken = "1234567890" 

 

from bs4 import BeautifulSoup 

import requests 

headers = { 

'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'} 

def weather(city): 

city = city.replace(" ", "+") 

res = requests.get( 

f'https://www.google.com/search?q={city}&oq={city}&aqs=chrome.0.35i39l2j0l4j46j69i60.6128j1j7&sourceid=chrome&ie=UTF-8', headers=headers) 

soup = BeautifulSoup(res.text, 'html.parser') 

location = soup.select('#wob_loc')[0].getText().strip() 

time = soup.select('#wob_dts')[0].getText().strip() 

info = soup.select('#wob_dc')[0].getText().strip() 

weather = soup.select('#wob_tm')[0].getText().strip() 

print(location, ',', time, ',', info, ',', weather+'°C') 

#print(time) 

#print(info) 

#print(weather+"°C") 

 

city = 'Madurai' 

city = city+" weather" 

weather(city) 

 

# Initialize GPIO 

def myCommandCallback(cmd): 

    print("Command received: %s" % cmd.data['command']) 

    status=cmd.data['command'] 

    if status=="switchon": 

        print ("Switch is on") 

    else : 

        print ("Switch is off") 

    

    #print(cmd) 

 

try: 

    deviceOptions = {"org": organization, "type": deviceType, "id": deviceId, "auth-method": authMethod, "auth-token": authToken} 

    deviceCli = ibmiotf.device.Client(deviceOptions) 

    #.............................................. 

     

except Exception as e: 

    print("Caught exception connecting device: %s" % str(e)) 

    sys.exit() 

 

# Connect and send a datapoint "hello" with value "world" into the cloud as an event of type "greeting" 10 times 

deviceCli.connect() 

 

while True: 

        #Get Sensor Data from DHT11         

        temp=random.randint(0,100) 

        Humid=random.randint(0,100) 

        SoilMoisture=random.randint(0,100) 

     

        data = { 'temp' : temp, 'Humid': Humid, "SoilMoisture": SoilMoisture}      

        #print data 

        def myOnPublishCallback(): 

            print ("Published Temperature = %s C" % temp, "Humidity = %s %%" % Humid, "SoilMoisture = %s %%" % SoilMoisture, "to IBM Watson") 

 

        success = deviceCli.publishEvent("IoTSensor", "json", data, qos=0, on_publish=myOnPublishCallback) 

        if not success: 

            print("Not connected to IoTF") 

        time.sleep(1) 

        deviceCli.commandCallback = myCommandCallback 

 

# Disconnect the device and application from the cloud 

deviceCli.disconnect() 